buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.1"
  }
}

import com.github.spotbugs.SpotBugsTask

spotbugs {
  sourceSets = [sourceSets.main]
  effort = "max"
  reportsDir = file("$project.buildDir/reports/spotbugs")
  excludeFilter = file("$rootProject.projectDir/config/spotbugs/excludeFilter.xml")
}

tasks.withType(SpotBugsTask) {
  reports {
    xml.enabled = true
    html.enabled = false
  }
}

task checkstyleHtmlMain {
  doLast {
    ant.xslt(in: checkstyleMain.reports.xml.destination,
      style: file('config/checkstyle/checkstyle-noframes-sorted.xsl'),
      out: new File(checkstyleMain.reports.xml.destination.parent, 'main.html'))
  }
}

task checkstyleHtmlTest {
  doLast {
    ant.xslt(in: checkstyleTest.reports.xml.destination,
      style: file('config/checkstyle/checkstyle-noframes-sorted.xsl'),
      out: new File(checkstyleTest.reports.xml.destination.parent, 'test.html'))
  }
}

[checkstyleMain, checkstyleTest].each { task ->
  task.logging.setLevel(LogLevel.LIFECYCLE)
}

checkstyleMain.finalizedBy checkstyleHtmlMain
checkstyleTest.finalizedBy checkstyleHtmlTest
